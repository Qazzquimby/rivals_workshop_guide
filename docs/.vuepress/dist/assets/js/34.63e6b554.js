(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{405:function(t,a,s){"use strict";s.r(a);var n=s(26),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://rivalsofaether.com/functions/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Built in Functions."),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Functions are a piece of code assigned, given a name, similar to how a variable is a value given a name.")]),t._v(" "),s("p",[t._v("To make them more flexible, functions can receive inputs (called 'parameters') and give an output (called a 'return\nvalue')")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[t._v("the_maximum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("the_maximum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("1, 2, 3")]),t._v(" are input parameters passed in to the function "),s("code",[t._v("max")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("max")]),t._v(" returns "),s("code",[t._v("3")]),t._v(", which gets saved to "),s("code",[t._v("the_maximum")]),t._v(".")]),t._v(" "),s("li",[s("code",[t._v("print")]),t._v(" takes "),s("code",[t._v("the_maximum")]),t._v(" as a parameter, and displays it to the screen (press ctrl 8 to see print output).")])]),t._v(" "),s("h1",{attrs:{id:"defines"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#defines"}},[t._v("#")]),t._v(" Defines")]),t._v(" "),s("p",[t._v("You can, and should (!) make your own functions.")]),t._v(" "),s("p",[t._v("Your functions are created with a "),s("code",[t._v("#define")]),t._v(" block.")]),t._v(" "),s("p",[t._v("Your functions "),s("strong",[t._v("must be declared at the bottom of the file they're used in.")])]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[t._v("#define stop_movement "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    hsp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    vsp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("This makes a new function called "),s("code",[t._v("stop_movement")]),t._v(" that you can use with "),s("code",[t._v("stop_movement()")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[t._v("#define "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add_displacement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x_offset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y_offset"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("x")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" x_offset\n    "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("y")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" y_offset\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Notice the first line. This requires two inputs, which will be given the names "),s("code",[t._v("x_offset")]),t._v(" and "),s("code",[t._v("y_offset")]),t._v(".")]),t._v(" "),s("h1",{attrs:{id:"advanced-defines"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#advanced-defines"}},[t._v("#")]),t._v(" Advanced Defines")]),t._v(" "),s("p",[t._v("It is also possible to allow an unknown number of input parameters.")]),t._v(" "),s("p",[t._v("The function body has two new variables.")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("argument")]),t._v(" is an "),s("RouterLink",{attrs:{to:"/workshop_guide/programming/data_structures.html#array"}},[t._v("array")]),t._v(" containing the input parameters.")],1),t._v(" "),s("li",[s("code",[t._v("argument_count")]),t._v(" is the size the "),s("code",[t._v("argument")]),t._v(" array. The same as "),s("code",[t._v("array_length(argument)")])])]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[t._v("#define old_prints\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prints each parameter to console, separated by spaces.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _out_string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("argument_count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        _out_string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("argument")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        _out_string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_out_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("You can use some parameters as variables and loop through the rest.")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[t._v("\n#define fancy_prints "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//title, ...args")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Prints the first parameter as a title, then the others separated by spaces.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" _out_string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("argument")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("argument_count")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        _out_string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v("\n        _out_string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("argument")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_out_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("These should always have a first line comment explaining what the parameters are, with the unknown quantity last,\nnamed "),s("code",[t._v("...args")])])])}),[],!1,null,null,null);a.default=e.exports}}]);