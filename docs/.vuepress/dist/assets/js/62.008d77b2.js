(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{450:function(t,a,s){"use strict";s.r(a);var e=s(26),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"array"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array"}},[t._v("#")]),t._v(" Array")]),t._v(" "),s("p",[t._v("An array is an ordered sequence of variables.")]),t._v(" "),s("p",[t._v("In Rivals, arrays can be created with "),s("code",[t._v("[value1, value2, value3, ...]")]),t._v(" such as:")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[t._v("hit_noise_names "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"oof"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ugh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"argh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n")])])]),s("p",[t._v("Arrays are accessed like "),s("code",[t._v("my_array[0]")]),t._v(" for the first item, "),s("code",[t._v("my_array[1]")]),t._v(" for the second, and so on. That can be a bit\nhard to remember at first. In programming, the first slot is "),s("em",[t._v("usually")]),t._v(" index "),s("code",[t._v("0")]),t._v(".\n"),s("br"),t._v(" "),s("code",[t._v("array_length(array)")]),t._v(" gets the number of items in the array.")]),t._v(" "),s("p",[s("br"),t._v("\nArrays are usually accessed with a "),s("a",{attrs:{href:"#for-loop"}},[t._v("for loop")]),t._v(" (see below), which lets you access each item inside.")]),t._v(" "),s("p",[s("br"),t._v("\nItems can be added to the end of an array with "),s("code",[t._v("my_array[array_length(my_array)] = new_value")]),t._v(", but be careful. Each time\nthe array grows larger, the language needs to completely rebuild it, which can become slow. If you're going to be adding\nvalues often, then initialize the array with "),s("code",[t._v("my_array[<maximum number you expect to need>] = noone")]),t._v(", which will create\nempty slots in the array up to that size. Be careful to check if the value is "),s("code",[t._v("noone")]),t._v(" when later accessing the array.")]),t._v(" "),s("div",{staticClass:"custom-block construction"},[s("p",{staticClass:"custom-block-title"},[t._v("Under Construction")]),t._v(" "),s("p",[t._v("The Assistant will provide better tools for building and accessing arrays without the above concerns.")])]),t._v(" "),s("h2",{attrs:{id:"for-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-loop"}},[t._v("#")]),t._v(" For Loop")]),t._v(" "),s("p",[t._v("For Loops are the primary way to access the contents of an array. At its simplest, a for loop counts from one number to\nanother, and repeats the code inside it for each value.")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// prints each number from 0 to 9 (not 10)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" number_to_count_to "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" number_to_count_to"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The for loop updates a counter, "),s("code",[t._v("i")]),t._v(", and repeats a block of code until some condition is met.")]),t._v(" "),s("p",[t._v("The "),s("code",[t._v("i")]),t._v(" stands for 'iterator.' Each time the loop runs is an 'iteration.'")]),t._v(" "),s("p",[t._v("There are three parts in the head of the for loop, separated by semicolons.")]),t._v(" "),s("ul",[s("li",[t._v("The first is a statement, usually to set the initial value of the iterator.")]),t._v(" "),s("li",[t._v("The second is a "),s("RouterLink",{attrs:{to:"/workshop_guide/programming/learning_path/data_types.html#booleans-true-or-false-values"}},[t._v("boolean")]),t._v(" expression meaning 'should the loop end now?'")],1),t._v(" "),s("li",[t._v("The third is a statement run each time the loop finishes, usually updating the iterator.")])]),t._v(" "),s("p",[t._v("It is used most often to access each value of an array, by counting through each index, and accessing the value at that\nindex.")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" my_array "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("array_length")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" item "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" my_array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("a",{attrs:{href:"/assistant"}},[t._v("The Assistant")]),t._v(" has a way to rapidly generate for loops over an array, by\ntyping "),s("code",[t._v("$foreach <array name>$")]),t._v(", such as "),s("code",[t._v("$foreach my_array$")]),t._v(".")]),t._v(" "),s("p",[t._v("("),s("a",{attrs:{href:"https://docs.yoyogames.com/source/dadiospice/002_reference/001_gml%20language%20overview/401_11_for.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Official Docs"),s("OutboundLink")],1),t._v(")")]),t._v(" "),s("h2",{attrs:{id:"ds-datastructures"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ds-datastructures"}},[t._v("#")]),t._v(" DS datastructures")]),t._v(" "),s("p",[t._v("You may come across other datastructures, starting with "),s("code",[t._v("DS_")]),t._v(", such as "),s("code",[t._v("DS_list")]),t._v(".")]),t._v(" "),s("p",[t._v("GML provides more powerful\ndatastructures that "),s("strong",[t._v("require great care to use, and are typically not recommended.")]),t._v(" These structures always require a\nfunction call to safely destroy them. There are "),s("em",[t._v("many")]),t._v(" ways this can not occur, which will lead to gradual memory issues\neven after the match ends!")]),t._v(" "),s("p",[t._v("Try to use an array or "),s("RouterLink",{attrs:{to:"/workshop_guide/programming/learning_path/struct.html"}},[t._v("struct")]),t._v(" instead.")],1)])}),[],!1,null,null,null);a.default=r.exports}}]);